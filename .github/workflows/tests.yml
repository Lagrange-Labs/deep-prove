name: "Test Suite"
permissions:
  contents: read

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ['hostname:hetzner-dedicated-6']
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.13'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r zkml/assets/scripts/requirements.txt

      - name: Create directory for Python script assets
        run: mkdir -p ./ci_py_assets

      - name: Run Python script to generate assets
        run: python zkml/assets/scripts/llms/gpt2_internal.py --output-dir ./zkml/assets/scripts/llms/ --export-model

      - name: Set Environment Variables for Rust tests
        run: |
          echo "DEEPPROVE_CI=true" >> $GITHUB_ENV
          echo "DEEPPROVE_ASSET_DIR=${{ github.workspace }}/zkml/assets/scripts/llms/" >> $GITHUB_ENV

      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo test 

      - name: Run cargo test
        run: cargo test
        env:
          RUSTFLAGS: "-W warnings"

  formatting:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - run: cargo fmt --all

  lint:
    name: cargo lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Ensure rustfmt is installed and setup problem matcher
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy 
      - run: cargo clippy --all -- -D warnings
        
>>>>>>> master
